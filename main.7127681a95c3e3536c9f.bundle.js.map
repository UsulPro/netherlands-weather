{"version":3,"file":"main.7127681a95c3e3536c9f.bundle.js","sources":["webpack:///./src/header/DateInput.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\nimport dayjs from 'dayjs';\n\nconst Date = styled.div`\n  color: white;\n  opacity: 0.8;\n  font-size: 30px;\n  font-family: sans-serif;\n  margin-bottom: 8px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  z-index: 10;\n  width: 300px;\n  & span {\n    visibility: hidden;\n    margin-left: 8px;\n    font-size: 14px;\n    opacity: 0.8;\n  }\n  &:hover {\n    span {\n      visibility: visible;\n    }\n  }\n`;\n\nclass DateInput extends React.Component {\n  static propTypes = {\n    date: PropTypes.string.isRequired,\n    onChange: PropTypes.func,\n  };\n  static defaultProps = {\n    onChange: () => {},\n  };\n\n  state = {\n    isEdit: false,\n  };\n\n  handleChange = ev => {\n    try {\n      const date = ev.target.value;\n      const dateIso = dayjs(date).toISOString();\n\n      this.setState({ isEdit: false }, () => {\n        this.props.onChange(dateIso);\n      });\n    } catch (err) {\n      console.warn(err.message);\n    }\n  };\n\n  render() {\n    const { date } = this.props;\n    const { isEdit } = this.state;\n    return (\n      <Date onClick={() => this.setState({ isEdit: true })}>\n        {!isEdit ? (\n          dayjs(date).format('DD MMM YYYY')\n        ) : (\n          <input\n            value={dayjs(date).format('YYYY-MM-DD')}\n            type=\"date\"\n            onChange={this.handleChange}\n          />\n        )}\n        {!isEdit && <span>select</span>}\n      </Date>\n    );\n  }\n}\n\nexport default DateInput;\n"],"mappings":"AAKA","sourceRoot":""}